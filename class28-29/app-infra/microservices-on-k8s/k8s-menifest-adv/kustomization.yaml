apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Metadata
metadata:
  name: craftista-production
  annotations:
    description: "Production deployment of Craftista microservices with advanced features"

# Namespace for all resources
namespace: craftista

# Resources to deploy (in order)
resources:
  # Base infrastructure
  - 01-namespace.yaml
  
  # Application deployments and services
  - 02-frontend-deployment.yaml
  - 03-catalogue-deployment.yaml
  - 04-voting-deployment.yaml
  - 05-recommendation-deployment.yaml
  
  # Ingress configuration (TLS will be handled by cert-manager via Terraform)
  - 06-ingress.yaml
  
  # Autoscaling
  - 07-hpa.yaml

# Common labels applied to all resources
commonLabels:
  app.kubernetes.io/name: craftista
  app.kubernetes.io/instance: production
  app.kubernetes.io/version: "1.0.0"
  app.kubernetes.io/component: microservice
  app.kubernetes.io/part-of: craftista-platform
  app.kubernetes.io/managed-by: kustomize
  environment: production

# Common annotations applied to all resources
commonAnnotations:
  deployment.kubernetes.io/revision: "1"
  managed-by: "terraform-and-kustomize"
  contact: "admin@akhileshmishra.tech"

# Images - update image tags here for easy version management
images:
  - name: 339713040609.dkr.ecr.ap-south-1.amazonaws.com/frontend
    newTag: latest
  - name: 339713040609.dkr.ecr.ap-south-1.amazonaws.com/catalogue
    newTag: latest
  - name: 339713040609.dkr.ecr.ap-south-1.amazonaws.com/voting
    newTag: latest
  - name: 339713040609.dkr.ecr.ap-south-1.amazonaws.com/recco
    newTag: latest

# ConfigMap generator for environment-specific configurations
configMapGenerator:
  - name: app-config
    literals:
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - METRICS_ENABLED=true
      - DOMAIN_NAME=ms.akhileshmishra.tech

# Secret generator for sensitive data (will be overridden by Terraform secrets)
secretGenerator:
  - name: app-secrets
    literals:
      - placeholder=will-be-replaced-by-terraform

# Resource transformations
replicas:
  # Override replica counts for production
  - name: frontend
    count: 2
  - name: catalogue
    count: 2  
  - name: voting
    count: 2
  - name: recco
    count: 2

# Patches for production-specific configurations
patchesStrategicMerge:
  # You can add patches here for environment-specific changes

# JSON patches for specific modifications
patches:
  # Add production-specific resource limits
  - target:
      kind: Deployment
      name: frontend
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/cpu
        value: "1000m"
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/memory
        value: "1Gi"
        
  - target:
      kind: Deployment
      name: catalogue
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/cpu
        value: "800m"
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/memory
        value: "1Gi"
        
  - target:
      kind: Deployment
      name: voting
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/cpu
        value: "1200m"
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/memory
        value: "2Gi"
        
  - target:
      kind: Deployment
      name: recco
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/cpu
        value: "400m"
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/memory
        value: "512Mi"

# Health check transformations
replacements:
  # Replace placeholders with actual values
  - source:
      kind: ConfigMap
      name: app-config
      fieldPath: data.DOMAIN_NAME
    targets:
      - select:
          kind: Ingress
        fieldPaths:
          - spec.rules.*.host

# Build metadata
buildMetadata:
  - buildDate
  - buildUser
  - vcsRef
  - vcsBranch